apiVersion: xl-deploy/v1beta1
kind: Applications
spec:
- name: ecommerce
  type: core.Directory
  children:
    - name: consul-ecommerce-app-service
      type: udm.Application
      children:
      - name: '1.0'
        type: udm.DeploymentPackage
        deployables:
        - name: consul
          type: aws.ecs.ServiceSpec
          serviceName: consul
          desiredCount: 1
          launchType: FARGATE
          networkMode: awsvpc
          assignPublicIp: true
          cpu: 1024
          memory: 2048
          executionRole: 'arn:aws:iam::932770550094:role/ecsTaskExecutionRole'
          subnets:
          - 'Name:{{username}}-consul-ecommerce-ecs-subnet-ipv4-az-1a'
          - 'Name:{{username}}-consul-ecommerce-ecs-subnet-ipv4-az-1b'
          securityGroups:
          - 'Name:{{username}}-consul-ecommerce-ecs-security-group'
          containerDefinitions:
          - name: consul
            containerName: consul
            type: aws.ecs.ContainerDefinitionSpec
            image: consul:1.2.3
            cpu: 1024
            softMemoryLimit: 768
            portMappings:
            - name: port-mapping-http
              type: aws.ecs.PortSpec
              containerPort: 8500
            - name: port-mapping-rpc
              type: aws.ecs.PortSpec
              containerPort: 8400
            - name: port-mapping-tcp-serflan
              type: aws.ecs.PortSpec
              protocol: tcp
              containerPort: 8400
            - name: port-mapping-udp-serflan
              type: aws.ecs.PortSpec
              protocol: udp
              containerPort: 8400
            - name: port-mapping-tcp-serfwan
              type: aws.ecs.PortSpec
              protocol: "TCP"
              containerPort: 8302
            - name: port-mapping-udp-serfwan
              type: aws.ecs.PortSpec
              protocol: "UDP"
              containerPort: 8302
            - name: port-mapping-server
              type: aws.ecs.PortSpec
              containerPort: 8300
            - name: port-mapping-consuldns
              type: aws.ecs.PortSpec
              containerPort: 8600
            mountPoints:
            - name: datadir
              type: aws.ecs.MountPoint
              containerPath: /var/lib/consul
            - name: gossip-key
              type: aws.ecs.MountPoint
              containerPath: /etc/consul/secrets
              readOnly: true
            command:
            - "/bin/sh"
            - "-ec"
            - |
              IP=$(hostname -i)

              if [ -e /etc/consul/secrets/gossip-key ]; then
                echo "{\"encrypt\": \"$(base64 /etc/consul/secrets/gossip-key)\"}" > /etc/consul/encrypt.json
                GOSSIP_KEY="-config-file /etc/consul/encrypt.json"
              fi

              for i in $(seq 0 $((${INITIAL_CLUSTER_SIZE} - 1))); do
                  while true; do
                      echo "Waiting for ${PETSET_NAME}-${i}.${PETSET_NAME} to come up"
                      ping -W 1 -c 1 ${PETSET_NAME}-${i}.${PETSET_NAME}.${PETSET_NAMESPACE}.svc.cluster.local > /dev/null && break
                      sleep 1s
                  done
              done

              PEERS=""
              for i in $(seq 0 $((${INITIAL_CLUSTER_SIZE} - 1))); do
                  PEERS="${PEERS}${PEERS:+ } -retry-join $(ping -c 1 ${PETSET_NAME}-${i}.${PETSET_NAME}.${PETSET_NAMESPACE}.svc.cluster.local | awk -F'[()]' '/PING/{print $2}')"
              done

              exec /bin/consul agent \
                -data-dir=/var/lib/consul \
                -server \
                -ui \
                -bootstrap-expect=${INITIAL_CLUSTER_SIZE} \
                -bind=0.0.0.0 \
                -advertise=${IP} \
                ${PEERS} \
                ${GOSSIP_KEY} \
                -client=0.0.0.0
            environment:
              INITIAL_CLUSTER_SIZE: 1
              PETSET_NAME: consul
              PETSET_NAMESPACE: xl-demo
            logConfiguration:
            - name: cloudwatch-log-registry
              type: aws.ecs.LogConfigurationSpec
              logDriver: awslogs
              options:
                awslogs-group: "/ecs/ecommerce"
                awslogs-region: "{{region}}"
                awslogs-stream-prefix: "ecs"
          - name: consul-config-loader
            containerName: consul-config-loader
            type: aws.ecs.ContainerDefinitionSpec
            image: jhipster/consul-config-loader:v0.3.0
            cpu: 1024
            softMemoryLimit: 768
            mountPoints:
            - name: config-volume
              type: aws.ecs.MountPoint
              containerPath: /config
            environment:
              INIT_SLEEP_SECONDS: 5
              CONSUL_URL: localhost
              CONSUL_PORT: 8500
            logConfiguration:
            - name: cloudwatch-log-registry
              type: aws.ecs.LogConfigurationSpec
              logDriver: awslogs
              options:
                awslogs-group: "/ecs/ecommerce"
                awslogs-region: "{{region}}"
                awslogs-stream-prefix: "ecs"

        - name: consul-ecommerce-store-app
          type: aws.ecs.ServiceSpec
          serviceName: consul-ecommerce-store-app
          desiredCount: 1
          launchType: FARGATE
          networkMode: awsvpc
          assignPublicIp: true
          executionRole: 'arn:aws:iam::932770550094:role/ecsTaskExecutionRole'
          cpu: 1024
          memory: 2048
          subnets:
          - 'Name:{{username}}-consul-ecommerce-ecs-subnet-ipv4-az-1a'
          - 'Name:{{username}}-consul-ecommerce-ecs-subnet-ipv4-az-1b'
          securityGroups:
          - 'Name:{{username}}-consul-ecommerce-ecs-security-group'
          containerDefinitions:
          - name: consul-ecommerce-store-app
            containerName: consul-ecommerce-store-app
            type: aws.ecs.ContainerDefinitionSpec
            image: xebialabsunsupported/consul-ecommerce-store
            cpu: 1024
            softMemoryLimit: 768
            portMappings:
            - name: port-mapping-8080
              type: aws.ecs.PortSpec
              containerPort: 8080
            logConfiguration:
            - name: cloudwatch-log-registry
              type: aws.ecs.LogConfigurationSpec
              logDriver: awslogs
              options:
                awslogs-group: "/ecs/ecommerce"
                awslogs-region: "{{region}}"
                awslogs-stream-prefix: "ecs"
            environment:
              SPRING_PROFILES_ACTIVE: prod,swagger
              JHIPSTER_REGISTRY_PASSWORD: admin
              SPRING_CLOUD_CONSUL_HOST: http://admin:${jhipster.registry.password}@jhipster-registry:8761/config
              EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://admin:${jhipster.registry.password}@jhipster-registry:8761/eureka
              SPRING_DATASOURCE_URL: jdbc:mysql://consul-ecommerce-store-mysql:3306/store?useUnicode=true&characterEncoding=utf8&useSSL=false
              JHIPSTER_METRICS_LOGS_ENABLED: true
              # JHIPSTER_LOGGING_LOGSTASH_ENABLED: true
              # JHIPSTER_LOGGING_LOGSTASH_HOST: jhipster-logstash
              # SPRING_ZIPKIN_ENABLED: true
              # SPRING_ZIPKIN_BASE_URL: http://jhipster-zipkin
              # SPRING_SLEUTH_PROPAGATION_KEYS: x-request-id,x-ot-span-context
              JAVA_OPTS:  -Xmx256m -Xms256m
              # JHIPSTER_SLEEP: 30

        - name: consul-ecommerce-store-db
          type: aws.ecs.ServiceSpec
          serviceName: consul-ecommerce-store-db
          desiredCount: 1
          launchType: FARGATE
          networkMode: awsvpc
          assignPublicIp: true
          executionRole: 'arn:aws:iam::932770550094:role/ecsTaskExecutionRole'
          cpu: 1024
          memory: 2048
          subnets:
          - 'Name:{{username}}-consul-ecommerce-ecs-subnet-ipv4-az-1a'
          - 'Name:{{username}}-consul-ecommerce-ecs-subnet-ipv4-az-1b'
          securityGroups:
          - 'Name:{{username}}-consul-ecommerce-ecs-security-group'
          containerDefinitions:
          - name: consul-ecommerce-store-mysql
            containerName: consul-ecommerce-store-mysql
            type: aws.ecs.ContainerDefinitionSpec
            image: mysql:5.7.20
            cpu: 1024
            softMemoryLimit: 768
            logConfiguration:
            - name: cloudwatch-log-registry
              type: aws.ecs.LogConfigurationSpec
              logDriver: awslogs
              options:
                awslogs-group: "/ecs/ecommerce"
                awslogs-region: "{{region}}"
                awslogs-stream-prefix: "ecs"
            command: 
            - mysqld
            - --lower_case_table_names=1 
            - --skip-ssl 
            - --character_set_server=utf8mb4 
            - --explicit_defaults_for_timestamp
            environment:
              MYSQL_USER: root
              MYSQL_ALLOW_EMPTY_PASSWORD: yes
              MYSQL_DATABASE: store

        - name: consul-ecommerce-invoice-app
          type: aws.ecs.ServiceSpec
          serviceName: consul-ecommerce-invoice-app
          desiredCount: 1
          launchType: FARGATE
          networkMode: awsvpc
          assignPublicIp: true
          executionRole: 'arn:aws:iam::932770550094:role/ecsTaskExecutionRole'
          cpu: 1024
          memory: 2048
          subnets:
          - 'Name:{{username}}-consul-ecommerce-ecs-subnet-ipv4-az-1a'
          - 'Name:{{username}}-consul-ecommerce-ecs-subnet-ipv4-az-1b'
          securityGroups:
          - 'Name:{{username}}-consul-ecommerce-ecs-security-group'
          containerDefinitions:
          - name: consul-ecommerce-invoice-app
            containerName: consul-ecommerce-invoice-app
            type: aws.ecs.ContainerDefinitionSpec
            image: xebialabsunsupported/consul-ecommerce-invoice
            cpu: 512
            softMemoryLimit: 768
            logConfiguration:
            - name: cloudwatch-log-registry
              type: aws.ecs.LogConfigurationSpec
              logDriver: awslogs
              options:
                awslogs-group: "/ecs/ecommerce"
                awslogs-region: "{{region}}"
                awslogs-stream-prefix: "ecs"
            environment:
              SPRING_PROFILES_ACTIVE: prod,swagger
              JHIPSTER_REGISTRY_PASSWORD: admin
              SPRING_CLOUD_CONFIG_URI: http://admin:${jhipster.registry.password}@jhipster-registry:8761/config
              EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://admin:${jhipster.registry.password}@jhipster-registry:8761/eureka
              SPRING_DATASOURCE_URL: jdbc:mysql://consul-ecommerce-invoice-mysql:3306/invoice?useUnicode=true&characterEncoding=utf8&useSSL=false
              JHIPSTER_METRICS_LOGS_ENABLED: true
              # JHIPSTER_LOGGING_LOGSTASH_ENABLED: true
              # JHIPSTER_LOGGING_LOGSTASH_HOST: jhipster-logstash
              # SPRING_ZIPKIN_ENABLED: true
              # SPRING_ZIPKIN_BASE_URL: http://jhipster-zipkin
              # SPRING_SLEUTH_PROPAGATION_KEYS: x-request-id,x-ot-span-context
              JAVA_OPTS:  -Xmx256m -Xms256m
              # JHIPSTER_SLEEP: 30
        - name: consul-ecommerce-invoice-db
          type: aws.ecs.ServiceSpec
          serviceName: consul-ecommerce-invoice-db
          desiredCount: 1
          launchType: FARGATE
          networkMode: awsvpc
          assignPublicIp: true
          executionRole: 'arn:aws:iam::932770550094:role/ecsTaskExecutionRole'
          cpu: 1024
          memory: 2048
          subnets:
          - 'Name:{{username}}-consul-ecommerce-ecs-subnet-ipv4-az-1a'
          - 'Name:{{username}}-consul-ecommerce-ecs-subnet-ipv4-az-1b'
          securityGroups:
          - 'Name:{{username}}-consul-ecommerce-ecs-security-group'
          containerDefinitions:
          - name: consul-ecommerce-invoice-mysql
            containerName: consul-ecommerce-invoice-mysql
            type: aws.ecs.ContainerDefinitionSpec
            image: mysql:5.7.20
            cpu: 512
            softMemoryLimit: 768
            logConfiguration:
            - name: cloudwatch-log-registry
              type: aws.ecs.LogConfigurationSpec
              logDriver: awslogs
              options:
                awslogs-group: "/ecs/ecommerce"
                awslogs-region: "{{region}}"
                awslogs-stream-prefix: "ecs"
            command: 
            - mysqld 
            - --lower_case_table_names=1 
            - --skip-ssl 
            - --character_set_server=utf8mb4 
            - --explicit_defaults_for_timestamp
            environment:
              MYSQL_USER: root
              MYSQL_ALLOW_EMPTY_PASSWORD: yes
              MYSQL_DATABASE: invoice

        - name: consul-ecommerce-notification-app
          type: aws.ecs.ServiceSpec
          serviceName: consul-ecommerce-notification-app
          desiredCount: 1
          launchType: FARGATE
          networkMode: awsvpc
          assignPublicIp: true
          executionRole: 'arn:aws:iam::932770550094:role/ecsTaskExecutionRole'
          cpu: 1024
          memory: 2048
          subnets:
          - 'Name:{{username}}-consul-ecommerce-ecs-subnet-ipv4-az-1a'
          - 'Name:{{username}}-consul-ecommerce-ecs-subnet-ipv4-az-1b'
          securityGroups:
          - 'Name:{{username}}-consul-ecommerce-ecs-security-group'
          containerDefinitions:
          - name: consul-ecommerce-notification-app
            containerName: consul-ecommerce-notification-app
            type: aws.ecs.ContainerDefinitionSpec
            image: xebialabsunsupported/consul-ecommerce-notification
            cpu: 512
            softMemoryLimit: 768
            logConfiguration:
            - name: cloudwatch-log-registry
              type: aws.ecs.LogConfigurationSpec
              logDriver: awslogs
              options:
                awslogs-group: "/ecs/ecommerce"
                awslogs-region: "{{region}}"
                awslogs-stream-prefix: "ecs"
            environment:
              SPRING_PROFILES_ACTIVE: prod,swagger
              JHIPSTER_REGISTRY_PASSWORD: admin
              SPRING_CLOUD_CONFIG_URI: http://admin:${jhipster.registry.password}@jhipster-registry:8761/config
              EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://admin:${jhipster.registry.password}@jhipster-registry:8761/eureka
              SPRING_DATA_MONGODB_URI: mongodb://consul-ecommerce-notification-mongodb:27017
              SPRING_DATA_MONGODB_DATABASE: notification
              JHIPSTER_METRICS_LOGS_ENABLED: true
              # JHIPSTER_LOGGING_LOGSTASH_ENABLED: true
              # JHIPSTER_LOGGING_LOGSTASH_HOST: jhipster-logstash
              # SPRING_ZIPKIN_ENABLED: true
              # SPRING_ZIPKIN_BASE_URL: http://jhipster-zipkin
              # SPRING_SLEUTH_PROPAGATION_KEYS: x-request-id,x-ot-span-context
              JAVA_OPTS:  -Xmx256m -Xms256m
              # JHIPSTER_SLEEP: 30

        - name: consul-ecommerce-notification-db
          type: aws.ecs.ServiceSpec
          serviceName: consul-ecommerce-notification-db
          desiredCount: 1
          launchType: FARGATE
          networkMode: awsvpc
          assignPublicIp: true
          executionRole: 'arn:aws:iam::932770550094:role/ecsTaskExecutionRole'
          cpu: 1024
          memory: 2048
          subnets:
          - 'Name:{{username}}-consul-ecommerce-ecs-subnet-ipv4-az-1a'
          - 'Name:{{username}}-consul-ecommerce-ecs-subnet-ipv4-az-1b'
          securityGroups:
          - 'Name:{{username}}-consul-ecommerce-ecs-security-group'
          containerDefinitions:
          - name: consul-ecommerce-notification-mongodb
            containerName: consul-ecommerce-notification-mongodb
            type: aws.ecs.ContainerDefinitionSpec
            image: mongo:3.6.3
            cpu: 512
            softMemoryLimit: 768
            logConfiguration:
            - name: cloudwatch-log-registry
              type: aws.ecs.LogConfigurationSpec
              logDriver: awslogs
              options:
                awslogs-group: "/ecs/ecommerce"
                awslogs-region: "{{region}}"
                awslogs-stream-prefix: "ecs"